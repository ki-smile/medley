[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "medley"
version = "0.1.0"
description = "Medical AI Ensemble - Multi-LLM diagnostic system with bias-aware consensus"
readme = "README.md"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Healthcare Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "requests>=2.31.0",
    "pyyaml>=6.0",
    "python-dotenv>=1.0.0",
    "click>=8.1.0",
    "rich>=13.0.0",
    "aiohttp>=3.9.0",
    "asyncio>=3.4.3",
    "pydantic>=2.0.0",
    "sqlalchemy>=2.0.0",
    "jinja2>=3.1.0",
]

[project.optional-dependencies]
web = [
    "flask>=3.0.0",
    "flask-socketio>=5.3.0",
    "flask-cors>=4.0.0",
]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "flake8>=6.1.0",
]
reports = [
    "weasyprint>=60.0",
    "matplotlib>=3.7.0",
    "plotly>=5.17.0",
]

[project.scripts]
medley = "medley.cli:main"

[project.urls]
Homepage = "https://github.com/yourusername/medley"
Documentation = "https://medley.readthedocs.io"
Repository = "https://github.com/yourusername/medley"
Issues = "https://github.com/yourusername/medley/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true