version: '3.8'

services:
  # Main web application
  web:
    build:
      context: .
      target: production
    container_name: medley-web
    expose:
      - "5000"
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY:-medley-secret-key-change-in-production}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - DATABASE_URL=sqlite:////app/data/medley.db
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./cache:/app/cache
      - ./reports:/app/reports
      - ./usecases:/app/usecases
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - medley-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: medley-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - medley-network

  # Nginx reverse proxy with SSL
  nginx:
    image: nginx:alpine
    container_name: medley-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./static:/usr/share/nginx/html/static:ro
      - ./certbot/www:/var/www/certbot:ro
      - ./certbot/conf:/etc/letsencrypt:ro
    depends_on:
      - web
    restart: unless-stopped
    networks:
      - medley-network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # Certbot for Let's Encrypt SSL certificates
  certbot:
    image: certbot/certbot:latest
    container_name: medley-certbot
    volumes:
      - ./certbot/www:/var/www/certbot:rw
      - ./certbot/conf:/etc/letsencrypt:rw
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    restart: unless-stopped
    networks:
      - medley-network

  # Celery worker for async tasks (optional)
  celery:
    build:
      context: .
      target: application
    container_name: medley-celery
    command: celery -A tasks worker --loglevel=info
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY:-medley-secret-key-change-in-production}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - DATABASE_URL=sqlite:////app/data/medley.db
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./cache:/app/cache
      - ./reports:/app/reports
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - medley-network
    profiles:
      - celery

  # PostgreSQL database (optional, for production)
  postgres:
    image: postgres:15-alpine
    container_name: medley-postgres
    environment:
      - POSTGRES_DB=medley
      - POSTGRES_USER=medley
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-change-in-production}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - medley-network
    profiles:
      - postgres

volumes:
  redis-data:
  postgres-data:

networks:
  medley-network:
    driver: bridge